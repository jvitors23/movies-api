[tool.poetry]
name = "movies-api"
version = "0.1.0"
description = ""
authors = ["Jos√© Vitor Santos Silva <jvss23031999@gmail.com>"]
readme = "README.md"
packages = [{include = "movies_api"}]

[tool.poetry.dependencies]
python = "^3.12.1"
django = "^5.1.6"
django-environ = "^0.12.0"
django-extensions = "^3.2.3"
djangorestframework = "^3.15.2"
djangorestframework-simplejwt = "^5.4.0"
drf-spectacular = "^0.28.0"
psycopg2 = "^2.9.10"
httpx = "^0.28.1"
setuptools = "^75.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
mypy = "^1.15.0"
django-debug-toolbar = "^5.0.1"
pre-commit = "^4.1.0"
openapi-python-client = "^0.23.1"
black = "^25.1.0"
pytest-sugar = "^1.0.0"
flake8-pyproject = "^1.2.3"
flake8 = "^7.1.1"
pytest-cov = "^6.0.0"
coverage = "^7.6.12"
pytest-django = "^4.10.0"
django-coverage-plugin = "^3.1.0"
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.1"
pytest-env = "^1.1.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==== pytest ====

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = "--ds=movies_api.settings.local --reuse-db"
env = [
    "DJANGO_SETTINGS_MODULE=movies_api.settings.local",
]
filterwarnings = [
     "ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning",
]

# ==== Coverage ====
[tool.coverage.run]
parallel = true
include = ["movies_api/**"]
omit = [
    "*/migrations/*",
    "*/scripts/*",
    "*/templates/*",
    "*/.venv/*",
    "*/tests/*",
    "*/conftest.py",
    "*/apps.py",
    "*/urls.py",
    "*/asgi.py",
    "*/settings/*",
    "*/data_provider_client/*",
    "*/wsgi.py",
    "*/manage.py",
    "gunicorn-cfg.py"
]
plugins = ["django_coverage_plugin"]

[tool.coverage.report]
fail_under = 0.00
precision = 2
show_missing = true
ignore_errors = true
skip_covered = true
skip_empty = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run:
    "@(abc.)?abstractmethod",
]

# ==== black ====
[tool.black]
line-length = 119
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
  \.toml
  |\.sh
  |\.git
  |\.ini
  |Dockerfile
  |\.tox
  |\.venv
)/
'''
